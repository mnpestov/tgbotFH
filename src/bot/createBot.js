require('dotenv').config();
const { Telegraf, session } = require('telegraf');
const logger = require('../shared/logger');
const { registerCommands } = require('../modules/commands');
const { mainMenu } = require('../modules/keyboards');

function createBot() {
  if (!process.env.BOT_TOKEN) throw new Error('BOT_TOKEN is missing');
  const bot = new Telegraf(process.env.BOT_TOKEN, { handlerTimeout: 9000 });

  // –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≥–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
  bot.use(async (ctx, next) => {
    logger.info(
      { update_id: ctx.update?.update_id, from: ctx.from?.id, type: Object.keys(ctx.update || {})[0] },
      'update'
    );
    try {
      await next();
    } catch (err) {
      logger.error({ err }, 'handler error');
      await ctx.reply('–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üôà');
    }
  });

  bot.use(session());

  // /start –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Å –¥–≤—É–º—è —Ç–∞—Ä–∏—Ñ–∞–º–∏
  bot.start((ctx) => {
    ctx.reply('–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ:', mainMenu());
  });

  bot.help((ctx) => ctx.reply('–ö–æ–º–∞–Ω–¥–∞ /menu ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é —Ç–∞—Ä–∏—Ñ–æ–≤.'));

  // –°–ù–ê–ß–ê–õ–ê ‚Äî —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–æ—á–µ—á–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (–∫–æ–º–∞–Ω–¥—ã/–º–µ–Ω—é)
  registerCommands(bot);

  // –ü–û–¢–û–ú ‚Äî –æ–±—â–µ–µ —ç—Ö–æ, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –∫–ª–∏–∫–∏ –ø–æ –∫–Ω–æ–ø–∫–∞–º
  bot.on('text', async (ctx) => {
    // –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å —ç—Ö–æ —Å–æ–≤—Å–µ–º, –Ω–æ –æ—Å—Ç–∞–≤–∏–º –∫–∞–∫ fallback
    // –æ–Ω–æ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ ¬´–ø—Ä–æ—á–∏–µ¬ª —Å–æ–æ–±—â–µ–Ω–∏—è
    return ctx.reply(`–≠—Ö–æ: ${ctx.message.text}`);
  });

  return bot;
}

module.exports = { createBot };
